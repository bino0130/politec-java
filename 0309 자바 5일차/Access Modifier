package another;

import java.time.format.TextStyle;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;

//import member.NewMember;

public class Hello {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		inputNumbers1();
		
		Hello nm = new Hello();
		nm.inputNumbers2(); //public
		nm.inputNumbers3(); //private
		nm.inputNumbers4(); //protected
		nm.inputNumbers5();
	}
	
	// static이 없으면 메모리상에 올라가지 않는다. static이 많으면 메모리 용량을 잡아먹어서 시스템이 느려짐. 필요한 것만 static 사용
	// static이 있으면 객체생성 ex)nm.메서드명(); 하지 않아도 됨
	// static이 없으면 객체생성 해야함
	public static int inputNumbers1() {
		Scanner sc = new Scanner(System.in);
		int num1;

		while(true) {
			num1 = sc.nextInt();
			if (num1 % 2 == 1) {
				if (num1 > 0 && num1 < 1000) {
					System.out.println("num1 ok");
					break;
				}
			}
			System.out.println("Try again");
		}
		return num1;
	}
	
	public int inputNumbers2() { // public : 모든 접근을 허용합니다. 어떠한 클래스가 접근을 하든 모두 허용됩니다.
		Scanner sc = new Scanner(System.in);
		int num1;

		while(true) {
			num1 = sc.nextInt();
			if (num1 % 2 == 1) {
				if (num1 > 0 && num1 < 1000) {
					System.out.println("num2 ok");
					break;
				}
			}
			System.out.println("Try again");
		}
		return num1;
	}
	
	private int inputNumbers3() { // private : 외부에서 접근이 불가능합니다. 즉, 같은 클래스 내에서만 접근이 가능합니다.
		Scanner sc = new Scanner(System.in);
		int num1;

		while(true) {
			num1 = sc.nextInt();
			if (num1 % 2 == 1) {
				if (num1 > 0 && num1 < 1000) {
					System.out.println("num3 ok");
					break;
				}
			}
			System.out.println("Try again");
		}
		return num1;
	}
	
	//동일 패키지에서는 접근 가능, 다른 패키지에서는 접근 불가
	protected int inputNumbers4() { // protected : 상속받은 클래스 또는 같은 패키지에서만 접근이 가능합니다.
		Scanner sc = new Scanner(System.in);
		int num1;

		while(true) {
			num1 = sc.nextInt();
			if (num1 % 2 == 1) {
				if (num1 > 0 && num1 < 1000) {
					System.out.println("num4 ok");
					break;
				}
			}
			System.out.println("Try again");
		}
		return num1;
	}
	
	int inputNumbers5() {  // default : 기본 제한자로써 아무것도 붙지 않고, 자신 클래스 내부와 같은 패키지 내에서만 접근이 가능.
		Scanner sc = new Scanner(System.in);
		int num1;

		while(true) {
			num1 = sc.nextInt();
			if (num1 % 2 == 1) {
				if (num1 > 0 && num1 < 1000) {
					System.out.println("num5 ok");
					break;
				}
			}
			System.out.println("Try again");
		}
		return num1;
	}
	
}
