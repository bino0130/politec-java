package advanced;

public class DayOne {

	public static void main(String[] args) {
		////////////////////////////

//		//#1. 연산 후 대입, 당연히 사칙연산의 순서
//		int ko10_li; // int형 변수 ko10_li 선언
//		ko10_li = 1 + 2; // 선언한 변수에 1 + 2 라는 값 대입
//		System.out.println("#1-1 : " + ko10_li); // 3 출력
//		//////
//		ko10_li = 1 + 2 * 3; // 사칙연산 순서에 따라 계산
//		System.out.println("#1-2 : " + ko10_li); // 7 출력

		////////////////////////////

		////////////////////////////

//		// #2. 누적하기, 합구하기

//		int sum; // c는 맨 앞에서 선언해야하지만, c++이나 java는 필요 시 선언해도 됨. but 지저분
//
//		sum = 0; // 누적, 루프는 꼭 초기화
//
//		// 1부터 100까지 합 구하기
//		for (int k10_i = 1; k10_i < 101; k10_i++) {
//			sum = sum + k10_i;
//		}
//		System.out.printf("#2-1 : %d\n", sum); // 1부터 100까지 총합 구하기
//		// 평균을 처리한다면 여기서 다 더한다음 총합 / 더한 숫자 n
//		System.out.printf("#2-2 : %d\n", sum / 100); // 1부터 100까지 평균 구하기
//
//		// 배열 응용
//
//		int[] k10_v = { 1, 2, 3, 4, 5 }; // 배열 k10_v 선언
//		int k10_vSum; // 배열 k10_v의 총합변수 선언
//
//		k10_vSum = 0; // 총합 변수 0으로 초기화
//
//		// 총합 구하는 반복문 실행
//		for (int k10_i = 0; k10_i < k10_v.length; k10_i++) {
//			k10_vSum = k10_vSum + k10_v[k10_i];
//		}
//
//		System.out.printf("#2-3 : %d\n", k10_vSum); // 총합 k10_vSum 출력
		
		////////////////////////////
		
//		//////////////////////////
//		
		// #3. 정수형 변수의 나눗셈은 정수범위에서 버림처리
		
//		int k10_li = 1000 / 3; //333.333333...이 나오지 않고
//		System.out.printf("#3-1 : %d\n" , k10_li); // 333이 출력됨
//		
//		k10_li = 1000 % 3; // 나머지를 계산할때는 %연산자 사용
//		System.out.printf("#3-2 : %d\n", k10_li); // 나머지 값 1이 출력됨
//		
//		// 나머지 연산자 %의 활용
//		
//		for (int i = 0; i < 20; i++) {
//			System.out.printf("#3-3 : %d ", i); // 0 부터 19까지 순서대로 출력
//			
//			// for문 안에 i + 1을 5로 나눴을 때 나머지가 0인 조건문 작성
//			
//			if ((i + 1) % 5 == 0) { // 나머지가 0인 것은 5번마다 있다. 왜 1을 더했는지 곰곰히 생각해보기
//				System.out.printf("\n"); // 4, 9, 14, 19에서 개행됨
//			}
//			
//		}
		
//		//////////////////////////
		
		//////////////////////////
		
		// #4 원하는 자릿수 반올림, 버림처리
		
//		int k10_li = 12345; // int형 변수 k10_li에 숫자 12345 선언
//		int k10_j = (k10_li / 10) * 10; // 1의 자리 버림 실행
//		System.out.printf("#4-1 : %d\n", k10_j); // 버림 결과값 12340 출력
//		
//		k10_li = 12345; // 12345의 10의 자리 이하 반올림 처리하기
//		k10_j = ((k10_li + 5) / 10) * 10; // 1의 자리에 +5를 해서 올림 실행
//		System.out.printf("#4-2 : %d\n", k10_j); // 결과값 12350 출력
//		
//		k10_li = 12344; // 12344로 변경해서 반올림 실행하기
//		k10_j = ((k10_li + 5) / 10) * 10; // 4-2와 같은 방식으로 반올림 실행
//		System.out.printf("#4-3 : %d\n", k10_j); // 결과값 12340 출력
//		// 반올림을 실행하는 1의 자리 숫자가 4 이하 숫자여서 버림이 실행된 것을 알 수 있음
//		
//		k10_li = 12345; // 100의 자리이하 올림 실행하기
//		k10_j = ((k10_li + 60) / 10) * 10; // 10의 자리에 60을 더해서 올림 실행
//		System.out.printf("#4-4 : %d\n", k10_j); // 결과값 12400 출력
//		
//		k10_li = 12345; // 100의 자리이하 버림 실행하기
//		k10_j = ((k10_li - 40) / 10) * 10; // 10의 자리에 40을 빼서 버림 실행
//		System.out.printf("#4-5 : %d\n", k10_j); // 결과값 12300 출력
//		
//		k10_li = 12345; // 12345의 1000의 자리 이하 반올림 처리하기
//		k10_j = ((k10_li + 500) / 1000) * 1000; // 100의 자리에 +500 후 1000으로 나누기
//		System.out.printf("#4-6 : %d\n", k10_j); // 결과값 12000 출력
//		// 반올림을 실행하는 100의 자리 숫자가 4 이하 숫자라서 버림이 실행됨
//		
//		k10_li = 12745; // 12745의 1000의 자리 이하 반올림 처리하기
//		k10_j = ((k10_li + 500) / 1000) * 1000; // 100의 자리에 +500 후 1000으로 나누기
//		System.out.printf("#4-7 : %d\n", k10_j); // 결과값 13000 출력
//		// 반올림을 실행하는 100의 자리 숫자가 5 이상 숫자라서 올림이 실행됨
		
		//////////////////////////
		
		//////////////////////////
		
		// #5 소수점 이하에서는 어떻게 할까?
		
//		int k10_myVal = 14 / 5; // 이 식을 계산하면 2.8이 나온다. 소수점 이하를 버리면 2, 반올림 하면 3이다.
//		
//		System.out.printf("#5-1 : %d\n", k10_myVal); // 예상과 달리 2가 나오는 모습
//		// 정수형 변수를 선언하고 정수형만 계산을 했기 때문에 몫인 2가 출력되었다
//		
//		// 2.8이 나오게끔 제대로 계산해보기
//		double k10_myValF = 14 / 5;
//		System.out.printf("#5-2 : %f\n" , k10_myValF); // 의도와는 다르게 2.000000이 나온다
//		
//		k10_myValF = 14.0 / 5;
//		System.out.printf("#5-3 : %f\n", k10_myValF); // 14와 5 중 하나라도 소숫점을 표시해줘야 2.800000이 출력된다.
//		
//		k10_myValF = 14.0 / 5 + 0.5; // 실수형 계산에서 0.5를 더해보자
//		System.out.printf("#5-4 : %f\n", k10_myValF); // 3.300000이 출력된다
//		
//		k10_myVal = (int)((14.0 / 5) + 0.5); // 실수형 계산을 한 뒤 정수형으로 형변환
//		System.out.printf("#5-5 : %d\n", k10_myVal); // 3이 출력됨
		
		//////////////////////////
	}

}