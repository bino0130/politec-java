package advanced;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class DayOneTaxcalc {

	////////////////////////////////
	// 단순 세금 계산기
//	public static int taxcal(int k10_val, int k10_rate) { // 세금 계산하는 method 생성
//		int k10_ret; // 리턴값을 int형으로 선언
//
//		if (((double) k10_val * (double) k10_rate) / 100.0 == k10_val * k10_rate / 100) // 세금의 실수형 값과 정수형 값이 같을 때
//			k10_ret = (k10_val * k10_rate) / 100; // 정수형 / 정수형으로 결과값 정수형으로 출력
//		else
//			k10_ret = k10_val * k10_rate/100 + 1; // 실수형 값과 정수형 값이 다를 경우 결과값 실수형으로 출력
//
//		return k10_ret; // 결과값 리턴
//	}
//
//	public static void main(String[] args) {
//		int k10_val = 271; // 세전 물건값
//		int k10_rate = 3; // 세금 5퍼센트
//
//		////////////////////
//		// 우리나라는 세금을 포함한 소비자가격을 기입하는데, 일본가면 세전가격을 소비자가로 붙여놔서 헷갈린다.
//		// 100엔이라고 편의점에서 사면 112엔을 받아서 잔돈만 생긴다.
//		int k10_tax = taxcal(k10_val, k10_rate); // 이전에 생성한 세금 계산기 함수 호출
//
//		System.out.printf("*************************************************\n"); // 영수증 상단 별찍기
//		System.out.printf("*		단순 세금 계산			*\n"); // 단순 세금 계산
//		System.out.printf("실제 세금계산 : %f\n", (k10_val * k10_rate) / 100.0); // 하나라도 double 형식 연산을 하면 실수형으로 표시
//
//		System.out.printf("세전가격 : %d, 세금 : %d, 세포함가격 : %d\n", k10_val, k10_tax, k10_val + k10_tax); // 세가지 값 모두 숫자형이므로
//																									// %d로 받아야 함
//
//		System.out.printf("*************************************************\n"); // 영수증 하단 별찍기
//
//	}
	////////////////////////////////

	////////////////////////////////
	// 세전 가격 구하기
//	public static int netprice(int k10_price, double k10_rate) {
//		return (int) (k10_price / (1 + k10_rate)); // 세전 가격 구하는 함수
//	}
//
//	public static void main(String[] args) {
//		int k10_price = 1234; // 상품가격
//		double k10_tax_rate = 0.1; // 세율
//
//		int k10_netprice = netprice(k10_price, k10_tax_rate); // 함수명과 변수명이 같지만 잘 구분하기
//		int k10_tax = k10_price - k10_netprice; // 세금 = 소비자가격 - 세전가격
//
//		System.out.printf("*************************************************\n");
//		System.out.printf("*	소비자가, 세전가격, 세금 계산		*\n");
//		System.out.printf(" 소비자가격 : %d, 세전가격 : %d, 세금 : %d\n", k10_price, k10_netprice, k10_tax);
//		System.out.printf("*************************************************\n");
//
//	}
	////////////////////////////////

	////////////////////////////////
	// 콤마 찍기와 Calendar, SimpleDateFormat을 활용해 영수증 출력하기
//	public static void main(String[] args) {
//		// # 돈은 영어를 기준으로 3자리마다 콤마를 찍는다.
//		// DecimalFormat이라는 클래스를 import한다.
//
//		DecimalFormat df = new DecimalFormat("###,###");
//
//		// Calendar와 SimpleDateFormat를 통해 getTime() 함수를 사용해서 현재 시간 출력하기
//		Calendar calt = Calendar.getInstance();
//		SimpleDateFormat sdt = new SimpleDateFormat("YYYY/MM/dd HH:mm:ss");
//
//		String[] k10_item = { "맛동산", "웨하스", "롯데샌드", "오땅", "사브레" }; // 과자 종류
//		int[] k10_price = { 1000, 2000, 3000, 2500, 1450 }; // 가격
//		int[] k10_amount = { 10, 2, 1, 3, 5 }; // 개수
//		double k10_tax_rate = 0.1; // 세율 10%
//		int k10_total_sum = 0; // 총합 변수 0으로 초기화
//
//		System.out.printf("*****************************************************\n"); // 영수증 상단 별찍기
//		System.out.printf("		    내가 산 과자들		\n"); // 내가 산 과자들
//		System.out.printf("항목		단가		수량		합계\n"); // 카테고리 별로 나누기
//
//		// 반복문을 돌리면서 i가 증가함에 따라 i에 해당하는 과자, 가격, 개수, 합계 출력하기
//		for (int i = 0; i < k10_item.length; i++) {
//			int sum = k10_price[i] * k10_amount[i];
//			k10_total_sum += sum;
//
//			if (i == 0) { // i가 0일 때 (맛동산 수량과 합계의 자릿수가 다른 과자들이랑 달라서 space로 공백 조절)
//				System.out.printf("%s		%s		 %s	       %s\n", k10_item[i], df.format(k10_price[i]),
//						df.format(k10_amount[i]), df.format(k10_total_sum));
//				// 기존의 price, amount, total_sum은 모두 int로 숫자형 데이터 타입이었지만, 콤마찍기를 위해 df.format()함수를
//				// 쓰면서 return 타입이 문자형으로 변환되므로
//				// printf에서 받는 데이터 타입을 문자형 타입인 %s로 바꿔줘야한다.
//
//			} else if (i == 2) { // i가 2일때 (다른 과자들은 tab키를 2번 쓰지만 롯데샌드는 1번만 써서 공백 조절)
//				System.out.printf("%s	%s		  %s	       %s\n", k10_item[i], df.format(k10_price[i]),
//						df.format(k10_amount[i]), df.format(k10_total_sum));
//				// 위와 동일
//			} else if (i != 2) { // i가 1, 3, 4일 때 (웨하스, 오땅, 사브레는 특별히 건들 부분 없음)
//				System.out.printf("%s		%s		  %s	       %s\n", k10_item[i], df.format(k10_price[i]),
//						df.format(k10_amount[i]), df.format(k10_total_sum));
//				// 위와 동일
//			}
//		}
//
//		System.out.printf("*****************************************************\n"); // 영수증 하단 별찍기
//		System.out.printf("지불 금액 :			 %20s\n", df.format(k10_total_sum)); // 소비자 가격 출력
//
//		int k10_total_net_price = (int) (k10_total_sum / (1 + k10_tax_rate));
//		System.out.printf("과세금액 :			 %20s\n", df.format(k10_total_net_price)); // 세전 가격 출력
//		int k10_tax = k10_total_sum - k10_total_net_price;
//		System.out.printf("세금 :				 %20s\n", df.format(k10_tax)); // 세금 출력
//		System.out.printf("최종실행시간 : 	%s\n", sdt.format(calt.getTime())); // getTime()을 이용한 최종 실행 시간 출력
//	}
////////////////////////////////
}
